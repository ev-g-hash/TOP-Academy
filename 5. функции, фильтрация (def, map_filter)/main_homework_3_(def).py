"""
Задание 1: Фильтрация положительных чисел
Напишите программу, которая принимает список чисел и использует filter(),
чтобы вернуть новый список, содержащий только положительные числа.
"""
numbers = [1, -1, 3, -2, 5, 6]

my_numbers = filter(lambda num:num > 0, numbers)

print(list(my_numbers),"\t - список положительных чисел;")

"""
Задание 2: Фильтрация строк по первой букве
Создайте список строк и используйте filter(), чтобы получить все строки, 
которые начинаются с буквы "A".
"""
sps = ["В конце А", "А в начале здесь есть", "В середине А тоже есть", "Тут нет большой а"]

my_sps = filter(lambda my_str:my_str[0] == "А", sps)

print(list(my_sps), "\t - строки которые начинаются с буквы А;")

"""
Задание 3: Фильтрация по длине слов
Напишите функцию, которая принимает список слов и возвращает новый список, 
содержащий только слова длиной больше 3 символов.
"""
sps = ["или", "возле", "куда", "зачем"]

my_sps = filter(lambda i:len(i) > 3, sps)

print(list(my_sps), "\t - список длина слов которых больше 3;")

"""
Задание 4: Фильтрация объектов по значению
Предположим, у вас есть список словарей, представляющих студентов с их именами и оценками.
Напишите программу, которая использует filter(), 
чтобы вернуть список студентов с оценками выше 75.
"""

student = [
    {"name":"Alice", "grade":77},
    {"name":"Bob", "grade":55},
    {"name":"Егор", "grade":100},
    {"name":"Вася", "grade":68}
]
my_student = filter(lambda person:person["grade"] > 75, student)

print("\nсписок студентов с оценками выше 75:")
print(list(my_student))

"""
Задание 5: Четные и нечетные числа
Создайте список чисел от 1 до 20. Используйте filter(), 
чтобы создать два списка: один для четных чисел, другой для нечетных.
"""
sps_numbers = list(range(21))

my_even = list(filter(lambda x:x % 2 == 0, sps_numbers))
my_odd = list(filter(lambda x:x % 2, sps_numbers))

print("\nсписок четных чисел:")
print(my_even)
print("\nсписок нечетных чисел:")
print(my_odd)

