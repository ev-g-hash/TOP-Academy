"""
---------------------------------------------------------------------------------------------
Фибоначи
---------------------------------------------------------------------------------------------
"""
# def powersOf2(n):
#     pow = 1
#     for i in range(n):
#         yield pow
#         pow *= 2
#
#
# t = list(powersOf2(10))

# print(t)

"""
----------------------------------------------------------------------------------
палиндром
----------------------------------------------------------------------------------
"""
# def pld(string):
#     string1 = list(string.replace(" ", ""))
#     string2 = list(reversed(string1))
#     if string1 == string2:
#         print("палиндром")
#     else:
#         print("не палиндром")
#
# pld("abba")
# pld("а роза упала на лапу азора")
# pld("василий давай дружить")
# ----------------------------------------------------срез-----------------------
# def pld(string):
#     string1 = list(string.replace(" ", ""))
#     string2 = list(string1 [::-1])
#     if string1 == string2:
#         print("палиндром")
#     else:
#         print("не палиндром")
#
# pld("abba")
# pld("а роза упала на лапу азора")
# pld("василий давай дружить")

"""
--------------------------------------------------------------------------------
треугольник паскаля
--------------------------------------------------------------------------------
"""
# def pascal_triangle(n):
#     row = [1]
#     y = [0]
#     for x in range(max(n, 0)):
#         print(row)
#         row = [left + right for left, right in zip(row + y, y + row)]
#
#
# pascal_triangle(10)

"""
-----------------------------------------------------------------------------------
Перевести секунды в виде дни:часы:минуты:секунды.
----------------------------------------------------------------------------------
"""
# def convert(sec):
#     days = sec // 86400
#     hours = sec % 86400 // 3600
#     minutes = sec % 86400 % 3600 // 60
#     sec %= 60
#     print(f'{days} день, {hours}:{minutes}:{sec}')
# #
# convert(123454321)

"""
---------------------------------------------------------------------------------------------------
Напишите функцию, которая отображает на экран форматированный текст, указанный ниже:
“Don't compare yourself with anyone in this world…
 if you do so, you are insulting yourself.”
                                    Bill Gates
---------------------------------------------------------------------------------------------------
"""
# def my_txt():
#     txt = """
# “Don't compare yourself with anyone in this world…
#  if you do so, you are insulting yourself.”
#                                     Bill Gates"""
#     print(txt)
#
# my_txt()

"""
---------------------------------------------------------------------------------------------------
Напишите функцию, которая принимает два числа в качестве параметра и отображает все четные числа
между ними.
--------------------------------------------------------------------------------------------------
"""
# print("чётные числа диапазона:")
#
# def my_even(x, y):
#
#     for _ in range(x, y + 1):
#         if not _ % 2:
#             print(_, end="; ")
#
# my_even(1, 10)

"""
---------------------------------------------------------------------------------------------------
Напишите функцию, которая отображает пустой или заполненный квадрат из некоторого символа. Функция
принимает в качестве параметров: длину стороны квадрата, символ и переменную логического типа:
■ если она равна True, квадрат заполненный;
■ если False, квадрат пустой.
----------------------------------------------------------------------------------------------------
"""
# print("\n")
#
# def my_square(l, s, square=True):
#
#     if square:
#         for _ in range(l):
#             print(s * l)
#     else:
#         print(s * l)
#         for _ in range(l - 2):
#             print(s + "   " * (l - 2) + s)
#         print(s * l)
#
# my_square(15, " $ ", square=False)
#
# """
# Задание 4
# Напишите функцию, которая возвращает минимальное из пяти чисел. Числа передаются в качестве параметров.
# """
# def my_min(a,b,c,d,e):
#     print(f"\nминимальное из пяти - ( {min(a,b,c,d,e)} )")
#
# my_min(1,10,3,2,7)

"""
----------------------------------------------------------------------------------------------------
Напишите функцию, которая возвращает произведение чисел в указанном диапазоне. Границы диапазона
передаются в качестве параметров. Если границы диапазона перепутаны (например, 5 - верхняя граница, 
25 - нижняя граница), их нужно поменять местами.
----------------------------------------------------------------------------------------------------
                    НЕ СЧИТАЕТ ЕСЛИ ВЗЯТЬ ОТРИЦАТЕЛЬНЫЙ ДИАПАЗОН
____________________________________________________________________________________________________
"""
# def my_multiply(start, end):
#
#     a = 1
#     b = 1
#
#     if start < end:
#         for i in range(start, end + 1):
#             if i == 0:
#                 i = 1
#             a *= i
#     if start > end:
#         for i in range(end, start + 1):
#             if i == 0:
#                 i = 1
#             b *= i
#
#     if a > b:
#         print(f"\nпроизведение чисел в диапазоне от {start} до {end} равно {a}")
#     else:
#         print(f"\nпроизведение чисел в диапазоне от {end} до {start} равно {b}")
#
# my_multiply(1, 5)

"""
----------------------------------------------------------------------------------------------------
                             СЧИТАЕТ В ОТРИЦАТЕЛЬНОМ ДИАПАЗОНЕ НООООО
                    НАДО БРАТЬ НА ЦИКЛ БОЛЬШЕ ТО ЕСТЬ 120 БУДЕТ ОТ -1 ДО -6
____________________________________________________________________________________________________
"""
# def my_multiply_while(x, y):
#
#     z = 1
#
#     if x < y:
#         while x < y:
#             x += 1
#             z *= x
#             print(x)
#         print(z)
#
#     if y < x:
#         while y < x:
#             y += 1
#             z *= y
#             print(y)
#         print(z)
#
# my_multiply_while(0, 5)

"""
------------------------------------------------------------------------------------------------------
Напишите функцию, которая считает количество цифр в числе. Число передаётся в качестве параметра. Из
функции нужно вернуть полученное количество цифр. Например, если передали 3456, количество цифр будет 4.
-------------------------------------------------------------------------------------------------------
"""
# def my_len(x):
#
#     y = str(x)
#     count = 0
#
#     for _ in y:
#         count += 1
#
#     print(f"\nколичество цифр в числе ( {y} ) = ( {count} )")
#
# my_len(12345)

# доп решение 2(float)
# def my_len_1(x):
#     y = str(x)
#     count = 0
#
#     for _ in y:
#         if _ == ".":
#             continue
#         count += 1
#
#     print(y)
#     print(f"количество цифр в числе {y} = ({count})")
#
# my_len_1(12345.001)

"""
-------------------------------------------------------------------------------------------------------
Напишите функцию, которая проверяет является ли число палиндромом. Число передаётся в качестве пара-
метра. Если число палиндром нужно вернуть из функции true, иначе false.
«Палиндром» — это число, у которого первая часть цифр равна второй перевернутой части цифр. Например,
123321—палиндром (первая часть 123, вторая 321, которая после переворота становится 123), 
546645—палиндром, а 421987 — не палиндром.
-------------------------------------------------------------------------------------------------------
"""
# print("\nЕсли число палиндром нужно вернуть из функции true, иначе false.")
#
# def my_pld(n):
#     print(f"введённое число ( {n} )")
#
#     n = str(n)
#
#     if n == n[::-1]:
#         print(bool(1))
#     else:
#         print(bool(0))
#
# my_pld(1213)

# def my_pld_1(n):
#     n = str(n)
#     if n == n[::-1]:
#         print("палиндром")
#     else:
#         print("не палиндром")
#
# my_pld_1(121)

"""
--------------------------------------------------------------------------------------------------
 Напишите функцию, которая отображает на экран форматированный текст, указанный ниже:
“Don't let the noise of others' opinions
 drown out your own inner voice.”
                            Steve Jobs
----------------------------------------------------------------------------------------------------
"""
# def my_str():
#     str = """
#     “Don't let the noise of others' opinions
#     drown out your own inner voice.”
#                             Steve Jobs"""
#     print(str)
#
# my_str()

"""
--------------------------------------------------------------------------------------------------
Напишите функцию, которая принимает два числа в качестве параметра и отображает все нечетные числа 
между ними.
----------------------------------------------------------------------------------------------------
"""
# x = int(input("введите первое число: "))
# y = int(input("введите второе число: "))
#
# def my_even_odd():
#     for i in range(x, y):
#         if i % 2:
#             print(i, "нечетное число")
#
# my_even_odd()

"""
--------------------------------------------------------------------------------------------------
Напишите функцию, которая отображает горизонтальную или вертикальную линию из некоторого символа. 
Функция принимает в качестве параметра: длину линии, направление, символ.
----------------------------------------------------------------------------------------------------
"""
# l = int(input("введите длину линии: "))
# n = input("введите направление линии например (горизонтальная или вертикальная) : ")
# s = input("введите символ: ")
#
# def my_lin():
#     if n == "горизонтальная":
#         print(s * l)
#     if n == "вертикальная":
#         for i in range(l):
#             print(s)
# my_lin()

"""
--------------------------------------------------------------------------------------------------
Напишите функцию, которая возвращает максимальное из четырёх чисел. Числа передаются в качестве 
параметров.
----------------------------------------------------------------------------------------------------
"""
# def my_max(x1, x2, x3, x4):
#     x = max(x1, x2, x3, x4)
#     print(x)
#
# my_max(1, 2, 3, 4)

"""
--------------------------------------------------------------------------------------------------
Напишите функцию,которая возвращает сумму чисел в указанном диапазоне. Границы диапазона передаются 
в качестве параметров.
----------------------------------------------------------------------------------------------------
"""
# def my_summ():
#     x = int(input("введите первое число: "))
#     y = int(input("введите второе число: "))
#     z = 0
#     for i in range(x, y + 1):
#         z += i
#     print(z)
#
# my_summ()

"""
-----------------------------------------------------------------------------------------------------
Напишите функцию, которая проверяет является ли шестизначное число «счастливым». Число передаётcя
в качестве параметра. Если число счастливое нужно вернуть из функции true, иначе false
«Счастливое шестизначное число» —это число у которого сумма первых трёх цифр равна сумме трёх вторых 
цифр. Например, 123420– счастливое 1+2+3 = 4+2+0,
а 723422 - несчасливое. 7+2+3 != 4+2+2
-----------------------------------------------------------------------------------------------------
"""
# def my_happy(x):
#
#     x = str(x)
#
#     a = x[:3]
#     b = x[3:]
#
#     _1 = 0
#     _2 = 0
#
#     for _ in a:
#         if _.isdigit():
#             _ = int(_)
#             _1 += _
#
#     for _ in b:
#         if _.isdigit():
#             _ = int(_)
#             _2 += _
#
#     if _1 == _2:
#         print(bool(x))
#     else:
#         print(bool())
#
#     # либо так
#     # if _1 == _2:
#     #     print(f"""
#     #             число {x} является счастливым так как сумма первых трёх цифр {a}
#     #             равна сумме вторых трёх цифр {b}, то есть ( {_1} = {_2} )
#     #           """)
#     # else:
#     #     print(f"""
#     #             число {x} не является счастливым так как сумма первых трёх цифр {a}
#     #             не равна сумме вторых трёх цифр {b}, то есть ( {_1} != {_2} )
#     #          """)
# my_happy(123321)

"""
-----------------------------------------------------------------------------------------------------
Напишите функцию, вычисляющую произведение элементов списка целых. Список передаётся в качестве па-
раметра. Полученный результат возвращается из функции.
-----------------------------------------------------------------------------------------------------
"""
# def my_multi(*args):
#
#     x_1 = 1
#
#     for i in args:
#         x_1 *= i
#
#     print(f"\nпроизведение элементов списка целых - ( {x_1} )")
#
# lst_1 = [1, 2, 3, 4, 5]
# my_multi(*lst_1)

"""
------------------------------------------------------------------------------------------------
Напишите функцию для нахождения минимума в списке целых. Список передаётся в качестве параметра.
Полученный результат возвращается из функции.
------------------------------------------------------------------------------------------------
"""
# def my_min(*args):
#
#     x_2 = min(lst_2)
#
#     print(f"\nминимальный элемент в списке равен {x_2}")
#
# lst_2 = [8, 2, 1, 4, 10]
# my_min(*lst_2)

"""
-----------------------------------------------------------------------------------------------------
Напишите функцию, определяющую количество простых чисел в списке целых. Список передаётся в качестве
параметра. Полученный результат возвращается из функции.
-----------------------------------------------------------------------------------------------------
"""
# def my_simple(*args):
#
#     z_1 = []
#
#     for j in lst_3:
#         i = 0
#         count = 0
#
#         while i < j:
#             i += 1
#             if j % i == 0:
#                 count += 1
#         if count == 2:
#             z_1.append(j)
#
#     print(f"\nсписок простых чисел {z_1}")
#     print(f"количество простых чисел ( {len(z_1)} )")
#
# lst_3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
# my_simple(*lst_3)

"""
---------------------------------------------------------------------------------------------------
Напишите функцию, удаляющую из списка целых некоторое заданное число. Из функции нужно вернуть
количество удаленных элементов.
---------------------------------------------------------------------------------------------------
"""
# def my_count(y, *args):
#     count = 0
#
#     for i in lst_4:
#         if i == y:
#             count += 1
#
#     print(f"\nпо заданному числу ( {z_2} ), из списка ( {lst_4} ) количество удаленных элементов = ( {count} )")
#
#
# lst_4 = [1, 2, 3, 5, 4, 5, 6, 5]
# z_2 = 5
#
# my_count(z_2, *lst_4)
"""
-----------------------------------------------------------------------------------------------------
Напишите функцию, которая получает два списка в качестве параметра и возвращает список, содержащий
элементы обоих списков.
----------------------------------------------------------------------------------------------------
"""
# def my_lst(x, y):
#
#     z_5 = []
#
#     for i in lst_5:
#         for j in lst_6:
#             if i == j:
#                 if not i in z_5:
#                     z_5.append(i)
#     print(f"""
#     список 1 = {lst_5}
#     список 2 = {lst_6}
#     список, содержащий элементы обоих списков ( {z_5} )""")
#
# lst_5 = [1, 2, 3, 3, 4, 4, 6, 10, 7]
# lst_6 = [3, 3, 4, 5, 6, 10, 10, 1, 8]
#
# my_lst(lst_5, lst_6)

"""
-------------------------------------------------------------------------------------------------------
Напишите функцию, высчитывающую степень каждого элемента списка целых. Значение для степени передаётся
в качестве параметра, список тоже передаётся в качестве параметра. Функция возвращает новый список, 
содержащий полученные результаты.
------------------------------------------------------------------------------------------------------
"""
# def my_degree(x, *args):
#
#     z_7 = []
#
#     for i in lst_7:
#         y = i ** x_7
#         z_7.append(y)
#
#     print(f"\nсписок ( {lst_7} )")
#     print(f"новый список ( {z_7}, каждый элемент которого возведён в степень ( {x_7} )")
#
# lst_7 = [2, 3, 4, 5, 10, 1, 8]
# x_7 = 3
#
# my_degree(x_7, *lst_7)
"""
-------------------------------------------------------------------------------------
функции
средний элемент списка
------------------------------------------------------------------------------------
"""
# num_3 = [1, 2, 3, 4, 5]
# sr_el_3 = sum(num_3) / len(num_3)
# print(sr_el_3)
# num_4 = [1, 2, 3, 4, 5]
# sr_el_4 = sum(num_4) / len(num_4)
# print(sr_el_4)

"""
---------------------------------------------------------------------------------------
пример функция деления
---------------------------------------------------------------------------------------
"""
# def func_division(x):
#     division = sum(x) / len(x)
#     return division
#
#
# sr_num_1 = func_division(num_1)
# sr_num_2 = func_division(num_2)
# print(sr_num_1, sr_num_2)

"""
------------------------------------------------------------------------------------------
функция найти гласные
------------------------------------------------------------------------------------------
"""
# string_1 = "hello world, hello evgeny"
# def func_vowels(x):
#     VOWELS = "aeiouyAEIOUY"    # VOWELS - константа пишутся с большой буквы
#     count = 0
#     for char in string_1:
#         if char in VOWELS:
#             count += 1
#     return count
# print(func_vowels(string_1))

"""
-------------------------------------------------------------------------------------------
функция день месяц
-------------------------------------------------------------------------------------------
"""
# def func_date(day: int, month: str):
#     return f"the date is {day} of {month}"
# print(func_date(15, "october"))
# print(func_date(day=15, month="october"))
# print(func_date(month="october", day=15))

"""
определение строки "палиндром"
"""
# def pld(string):
#     string1 = list(string.replace(" ", ""))
#     string2 = list(reversed(string1))
#     if string1 == string2:
#         print("палиндром")
#     else:
#         print("не палиндром")
#
# pld("abba")
# pld("gabba")

"""
--------------------------------------------------------------------------------------------------
Задание 6
Напишите функцию,которая проверяет является ли число простым.Число передаётся в качестве параметра. 
Если число простое нужно вернуть из метода true,иначе false.

(Просто́е число́ — это натуральное число, большее единицы, имеющее ровно два натуральных делителя:
1 и само себя)
----------------------------------------------------------------------------------------------------
"""
# z = []
#
# for j in range(2, 1000):
#     i = 0
#     count = 0
#
#     while i < j:
#         i += 1
#         if j % i == 0:
#             count += 1
#     if count == 2:
#         z.append(j)
#
# # print(count, end=" ")
# print()
# print(z)
# print(len(z))