"""
Глоссарий
✅ Логический тип данных (булев тип, Boolean) — примитивный тип данных в информатике,
принимающий два возможных значения, иногда называемых истиной (True) и ложью (False).

✅ В Python логические значения True (истина) и False (ложь) представляют тип данных bool.
 У этого типа только два возможных значения и два соответствующих литерала:
и False. Данные логические значения можно трактовать как числа.
Значению True соответствует число 1, в то время как значению False соответствует 0.

✅ Логические операции, используемые для создания произвольно сложных логических выражений:
и (and)
или (or)
не (not)

✅ Логические операторы and, or, not имеют следующие определения:
a and b дает True, если оба операнда True, или False, если хотя бы один из них False
a or b дает False, если оба операнда False, или True, если хотя бы один из них True
not a дает True, если a имеет значение False, или False, если a имеет значение True

✅ Предикатом в программировании называется функция, которая возвращает значение
True или False.

✅ Функция bool() используется для приведения к булеву типу других типов данных.

✅ Функция isinstance() используется для проверки соответствия типа объекта какому-либо
 типу данных.

✅ Функция type() используется для определения типа указанного в качестве аргумента объекта.
"""

# def func(num1, num2):
#     if num1 % num2 == 0:
#         print("делится")
#     else:
#         print("не делится")
#
#
# num_1, num_2 = int(input()), int(input())
# func(num_1, num_2)

"""
Литерал None
Литерал None в Python позволяет представить null переменную, то есть переменную, 
которая не содержит какого-либо значения. Другими словами, None – это специальная 
константа, означающая пустоту. Если более точно, то None – это объект специального 
типа данных NoneType.
"""
# var = None
# print(type(var))

# var = None
# if var is None:  # используем оператор is
#   print('None')
# else:
#   print('Not None')

# var = None
# if var == None:  # используем оператор ==
#   print('None')
# else:
#   print('Not None')

# print(None == 17)
# print(None == 3.14)
# print(None == True)
# print(None == [1, 2, 3])
# print(None == 'Beegeek')


# print(None > 0)
# print(None <= False)

# print(None == False)

# empty = ''
# print(None == empty)

"""
Глоссарий
✅ Литерал None в Python позволяет представить переменную, которая не содержит 
какого-либо значения. None – это объект специального типа данных NoneType. 
Все переменные, которым присвоено значение None, ссылаются на один и тот же объект 
типа NoneType.

✅ Синглтон – объект, существующий в единственном экземпляре.

✅ Для проверки значения переменной на None, используется либо оператор is, либо оператор ==.

✅ Сравнение None с любым объектом, отличным от None, дает значение False.

✅ Функции, не возвращающие значений, на самом деле, в Python возвращают значение None.
"""





