"""
–ú–µ—Ç–æ–¥ capitalize() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ø–∏—é —Å—Ç—Ä–æ–∫–∏ s,
–≤ –∫–æ—Ç–æ—Ä–æ–π –ø–µ—Ä–≤—ã–π —Å–∏–º–≤–æ–ª –∏–º–µ–µ—Ç –≤–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä,
–∞ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –∏–º–µ—é—Ç –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä.
"""
# s = 'foO BaR BAZ quX'
# print(s.capitalize())

"""
–ú–µ—Ç–æ–¥ swapcase()
–ú–µ—Ç–æ–¥ swapcase() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ø–∏—é —Å—Ç—Ä–æ–∫–∏ s, –≤ –∫–æ—Ç–æ—Ä–æ–π –≤—Å–µ —Å–∏–º–≤–æ–ª—ã, 
–∏–º–µ—é—â–∏–µ –≤–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä, –ø—Ä–µ–æ–±—Ä–∞–∑—É—é—Ç—Å—è –≤ —Å–∏–º–≤–æ–ª—ã –Ω–∏–∂–Ω–µ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞ –∏ –Ω–∞–æ–±–æ—Ä–æ—Ç.
"""
# s = 'FOO Bar 123 baz qUX'
# print(s.swapcase())

"""
–ú–µ—Ç–æ–¥ title()
–ú–µ—Ç–æ–¥ title() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ø–∏—é —Å—Ç—Ä–æ–∫–∏ s, 
–≤ –∫–æ—Ç–æ—Ä–æ–π –ø–µ—Ä–≤—ã–π —Å–∏–º–≤–æ–ª –∫–∞–∂–¥–æ–≥–æ —Å–ª–æ–≤–∞ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—Å—è –≤ –≤–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä.
"""
# s = 'the sun also rises'
# print(s.title())

"""
–ú–µ—Ç–æ–¥ lower()
–ú–µ—Ç–æ–¥ lower() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ø–∏—é —Å—Ç—Ä–æ–∫–∏ s, –≤ –∫–æ—Ç–æ—Ä–æ–π –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –∏–º–µ—é—Ç –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä.
"""
# s = 'FOO Bar 123 baz qUX'
# print(s.lower())

"""
–ú–µ—Ç–æ–¥ upper()
–ú–µ—Ç–æ–¥ upper() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ø–∏—é —Å—Ç—Ä–æ–∫–∏ s, –≤ –∫–æ—Ç–æ—Ä–æ–π –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –∏–º–µ—é—Ç –≤–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä.
"""
# s = 'FOO Bar 123 baz qUX'
# print(s.upper())

"""
–ê–Ω–≥–ª–æ-—Ä—É—Å—Å–∫–∏–π —Å–ª–æ–≤–∞—Ä–∏–∫:
capitalize ‚Äî –ø–∏—Å–∞—Ç—å –ø—Ä–æ–ø–∏—Å–Ω—ã–º–∏ –±—É–∫–≤–∞–º–∏, –∑–∞–∫—Ä–µ–ø–∏—Ç—å.
swapcase ‚Äî –æ–±–º–µ–Ω—è—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä. swap ‚Äî –≥–ª. –æ–±–º–µ–Ω–∏–≤–∞—Ç—å—Å—è, case ‚Äî —Å–ª—É—á–∞–π, —Ä–µ–≥–∏—Å—Ç—Ä, –ø–∞–¥–µ–∂, –¥–µ–ª–æ, —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ...
title ‚Äî –∑–∞–≥–æ–ª–æ–≤–æ–∫, —Ç–∏—Ç—É–ª.
lower ‚Äî –Ω–∏–∂–Ω–∏–π.
upper ‚Äî –≤–µ—Ä—Ö–Ω–∏–π.
"""

"""
—É–ø—Ä–∞–∂–Ω—è–ª–∫–∏
"""
# s = 'i Learn Python language'
# print(s.capitalize())

# s = 'i LEARN Python LAnguaGE'
# print(s.lower())

# s = '$12344%^$#@!'
# print(s.lower())

# s1 = 'a'
# s2 = s1.upper()
# print(s1, s2)

# s = 'i LEARN Python LAnguaGE'
# print(s.upper())

# s = 'i LEARN Python LAnguaGE'
# print(s.swapcase())

"""
–ó–∞–≥–ª–∞–≤–Ω—ã–µ –±—É–∫–≤—ã üî†
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—ë—Ç—Å—è —Å—Ç—Ä–æ–∫–∞, —Å–æ—Å—Ç–æ—è—â–∞—è –∏–∑ –∏–º–µ–Ω–∏ –∏ —Ñ–∞–º–∏–ª–∏–∏ —á–µ–ª–æ–≤–µ–∫–∞, 
—Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã—Ö –æ–¥–Ω–∏–º –ø—Ä–æ–±–µ–ª–æ–º. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, 
—á—Ç–æ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—ë—Ç—Å—è —Å—Ç—Ä–æ–∫–∞.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ ¬´YES¬ª (–±–µ–∑ –∫–∞–≤—ã—á–µ–∫), –µ—Å–ª–∏ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è 
—Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã, –∏–ª–∏ ¬´NO¬ª (–±–µ–∑ –∫–∞–≤—ã—á–µ–∫) –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –°—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –∏ —Å–∏–º–≤–æ–ª –ø—Ä–æ–±–µ–ª–∞.
"""

# _str = input()
#
# if _str == _str.title():
#     print("YES")
# else:
#     print("NO")

#-----------------------------
# a = input()
# print('YES' if (a==a.title()) else 'NO')

"""
sWAP cASE üîÉ
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—ë—Ç—Å—è —Å—Ç—Ä–æ–∫–∞. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, 
–∫–æ—Ç–æ—Ä–∞—è –º–µ–Ω—è–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä —Å–∏–º–≤–æ–ª–æ–≤ ‚Äì –∑–∞–º–µ–Ω—è–µ—Ç –≤—Å–µ —Å—Ç—Ä–æ—á–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –∑–∞–≥–ª–∞–≤–Ω—ã–º–∏ –∏ –Ω–∞–æ–±–æ—Ä–æ—Ç.
"""


# print(input().swapcase())

"""
—Ö–æ—Ä–æ—à–∏–π –æ—Ç—Ç–µ–Ω–æ–∫
"""

# _str = input().lower()
#
# if "—Ö–æ—Ä–æ—à" in _str:
#     print("YES")
# else:
#     print("NO")

#-------------------------------

# print("YES" if "—Ö–æ—Ä–æ—à" in input().lower() else "NO")
"""
–ù–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä üîΩ
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—ë—Ç—Å—è —Å—Ç—Ä–æ–∫–∞. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, 
–∫–æ—Ç–æ—Ä–∞—è –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—É–∫–≤–µ–Ω–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—ë—Ç—Å—è —Å—Ç—Ä–æ–∫–∞.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—É–∫–≤–µ–Ω–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ.
"""
# _str = input()
# count = 0
#
# for i in _str:
#     if i.isalpha():
#         if i == i.lower():
#             count += 1
#
# print(count)

#---------------------------------
# print(sum(s.islower() for s in input()))

#-----------------------
# s = input()
# cnt_al_lower = 0
#
# for el in s:
#     if el != el.upper():
#         cnt_al_lower += 1
#
# print(cnt_al_lower)

"""
–¢–µ–º–∞ —É—Ä–æ–∫–∞: —Å—Ç—Ä–æ–∫–∏
–ú–µ—Ç–æ–¥—ã count()
–ú–µ—Ç–æ–¥ startswith()
–ú–µ—Ç–æ–¥ endswith()
–ú–µ—Ç–æ–¥ find()
–ú–µ—Ç–æ–¥ rfind()
–ú–µ—Ç–æ–¥ index()
–ú–µ—Ç–æ–¥ rindex()
–ú–µ—Ç–æ–¥ strip()
–ú–µ—Ç–æ–¥ lstrip()
–ú–µ—Ç–æ–¥ rstrip()
–ú–µ—Ç–æ–¥ replace()
"""

"""
–ú–µ—Ç–æ–¥ count()
–ú–µ—Ç–æ–¥ count(<sub>, <start>, <end>) —Å—á–∏—Ç–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–ø–µ—Ä–µ—Å–µ–∫–∞—é—â–∏—Ö—Å—è –≤—Ö–æ–∂–¥–µ–Ω–∏–π 
–ø–æ–¥—Å—Ç—Ä–æ–∫–∏ <sub> –≤ –∏—Å—Ö–æ–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É s
"""
# s = 'foo goo moo'
# print(s.count('oo'))
# print(s.count('oo', 0, 8))  # –ø–æ–¥—Å—á–µ—Ç —Å 0 –ø–æ 7 —Å–∏–º–≤–æ–ª

# –≤—ã–≤–æ–¥–∏—Ç:
#
# 3
# 2

"""
–ú–µ—Ç–æ–¥ startswith()
–ú–µ—Ç–æ–¥ startswith(<prefix>, <start>, <end>) –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, 
–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–∏ –∏—Å—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ s –ø–æ–¥—Å—Ç—Ä–æ–∫–æ–π <prefix>. 
–ú–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ True, –µ—Å–ª–∏ –∏—Å—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ <prefix>, 
–∏–ª–∏ False –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ.
"""

# s = 'foobar'
# print(s.startswith('foo'))
# print(s.startswith('baz'))

# –≤—ã–≤–æ–¥–∏—Ç:
#
# True
# False

"""
–ú–µ—Ç–æ–¥ endswith()
–ú–µ—Ç–æ–¥ endswith(<suffix>, <start>, <end>) –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, 
–æ–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –ª–∏ –∏—Å—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ s –ø–æ–¥—Å—Ç—Ä–æ–∫–æ–π <suffix>. 
–ú–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ True, –µ—Å–ª–∏ –∏—Å—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –æ–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ –ø–æ–¥—Å—Ç—Ä–æ–∫—É <suffix>, 
–∏–ª–∏ False –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ.
"""

# s = 'foobar'
# print(s.endswith('bar'))
# print(s.endswith('baz'))
#
# –≤—ã–≤–æ–¥–∏—Ç:
#
# True
# False

"""
–ú–µ—Ç–æ–¥—ã find(), rfind()
–ú–µ—Ç–æ–¥ find(<sub>, <start>, <end>) –Ω–∞—Ö–æ–¥–∏—Ç –∏–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ 
<sub> –≤ –∏—Å—Ö–æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ s. –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ s –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ <sub>, 
—Ç–æ –º–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ -1. 
–ú—ã –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –Ω–∞—Ä–∞–≤–Ω–µ —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º in –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏: 
—Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –∑–∞–¥–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –Ω–µ–∫–æ—Ç–æ—Ä—É—é –ø–æ–¥—Å—Ç—Ä–æ–∫—É –∏–ª–∏ –Ω–µ—Ç.

–ú–µ—Ç–æ–¥ rfind(<sub>, <start>, <end>) –∏–¥–µ–Ω—Ç–∏—á–µ–Ω –º–µ—Ç–æ–¥—É find(<sub>, <start>, <end>), 
–∑–∞ —Ç–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º, —á—Ç–æ –æ–Ω –∏—â–µ—Ç –ø–µ—Ä–≤–æ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ <sub>, 
–Ω–∞—á–∏–Ω–∞—è —Å –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–æ–∫–∏ s.
"""

# s = 'foo bar foo baz foo qux'
# print(s.find('foo'))
# print(s.find('bar'))
# print(s.find('qu'))
# print(s.find('python'))

# –≤—ã–≤–æ–¥–∏—Ç:
# 0
# 4
# 20
# -1

"""
–ú–µ—Ç–æ–¥—ã index(), rindex()
–ú–µ—Ç–æ–¥ index(<sub>, <start>, <end>) –∏–¥–µ–Ω—Ç–∏—á–µ–Ω –º–µ—Ç–æ–¥—É find(<sub>, <start>, <end>), 
–∑–∞ —Ç–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º, —á—Ç–æ –æ–Ω –≤—ã–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É ValueError: 
substring not found –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã, –µ—Å–ª–∏ –ø–æ–¥—Å—Ç—Ä–æ–∫–∞ <sub> –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.

–ú–µ—Ç–æ–¥ rindex(<sub>, <start>, <end>) –∏–¥–µ–Ω—Ç–∏—á–µ–Ω –º–µ—Ç–æ–¥—É index(<sub>, <start>, <end>), 
–∑–∞ —Ç–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º, —á—Ç–æ –æ–Ω –∏—â–µ—Ç –ø–µ—Ä–≤–æ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ <sub>, –Ω–∞—á–∏–Ω–∞—è —Å –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–æ–∫–∏ s.

–ú–µ—Ç–æ–¥—ã find() –∏ rfind() —è–≤–ª—è—é—Ç—Å—è –±–æ–ª–µ–µ –±–µ–∑–æ–ø–∞—Å–Ω—ã–º–∏, —á–µ–º index() –∏ rindex(), 
—Ç–∞–∫ –∫–∞–∫ –Ω–µ –ø—Ä–∏–≤–æ–¥—è—Ç –∫ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—é –æ—à–∏–±–∫–∏ –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã.
"""

"""
–ú–µ—Ç–æ–¥ strip()
–ú–µ—Ç–æ–¥ strip() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ø–∏—é —Å—Ç—Ä–æ–∫–∏ s, 
—É –∫–æ—Ç–æ—Ä–æ–π —É–¥–∞–ª–µ–Ω—ã –≤—Å–µ –ø—Ä–æ–±–µ–ª—ã, —Å—Ç–æ—è—â–∏–µ –≤ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏.
"""

# s = '     foo bar foo baz foo qux      '
# print(s.strip())
#
# –≤—ã–≤–æ–¥–∏—Ç:
# foo bar foo baz foo qux


"""
–ú–µ—Ç–æ–¥ lstrip()
–ú–µ—Ç–æ–¥ lstrip() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ø–∏—é —Å—Ç—Ä–æ–∫–∏ s, 
—É –∫–æ—Ç–æ—Ä–æ–π —É–¥–∞–ª–µ–Ω—ã –≤—Å–µ –ø—Ä–æ–±–µ–ª—ã, —Å—Ç–æ—è—â–∏–µ –≤ –Ω–∞—á–∞–ª–µ —Å—Ç—Ä–æ–∫–∏.

–ú–µ—Ç–æ–¥ rstrip()
–ú–µ—Ç–æ–¥ rstrip() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ø–∏—é —Å—Ç—Ä–æ–∫–∏ s, 
—É –∫–æ—Ç–æ—Ä–æ–π —É–¥–∞–ª–µ–Ω—ã –≤—Å–µ –ø—Ä–æ–±–µ–ª—ã, —Å—Ç–æ—è—â–∏–µ –≤ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏.
"""

"""
–ú–µ—Ç–æ–¥ replace()
–ú–µ—Ç–æ–¥ replace(<old>, <new>) 
–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ø–∏—é s —Å–æ –≤—Å–µ–º–∏ –≤—Ö–æ–∂–¥–µ–Ω–∏—è–º–∏ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ <old>, –∑–∞–º–µ–Ω—ë–Ω–Ω—ã–º–∏ –Ω–∞ <new>.
"""
# s = 'foo bar foo baz foo qux'
# print(s.replace('foo', 'grault'))
#
# –≤—ã–≤–æ–¥–∏—Ç:
# grault bar grault baz grault qux

"""
–ü—Ä–∏–º–µ—á–∞–Ω–∏—è
–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –ú–µ—Ç–æ–¥—ã strip(), lstrip(), rstrip() –º–æ–≥—É—Ç 
–ø—Ä–∏–Ω–∏–º–∞—Ç—å –Ω–∞ –≤—Ö–æ–¥ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç <chars>. 
–ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç <chars> ‚Äì —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –Ω–∞–±–æ—Ä —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.
"""

# s = '-+-+abc+-+-'
#
# print(s.strip('+-'))
# print(s.rstrip('+-'))
# print(s.lstrip('+-'))
#
# –≤—ã–≤–æ–¥–∏—Ç:
# abc
# -+-+abc
# abc+-+-

# s = 'www.stepik.org'
# print(s.startswith('www'))

# s = 'www.stepik.org'
# print(s.endswith('.ru'))

# s = 'I learn Python language. Python - awesome!'
# print(s.find('Python'))

# s = '     I learn Python language               '
# print(s.strip())

# s = 'abcdababa'
# print(s.replace('ab', '123'))

"""
–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—ë—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞, —Å–æ—Å—Ç–æ—è—â–∞—è –∏–∑ —Å–ª–æ–≤, 
—Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã—Ö —Ä–æ–≤–Ω–æ –æ–¥–Ω–∏–º –ø—Ä–æ–±–µ–ª–æ–º. 
–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –≤ –Ω–µ–π.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—ë—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –°—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–æ–±–µ–ª–æ–≤ –≤ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ.
"""
# _str = input()
# count1 = 1
# count2 = _str.count(" ")
# print(count1 + count2)

#--------------------------------------
# text = input()  # –í–≤–æ–¥ —Å—Ç—Ä–æ–∫–∏ —Ç–µ–∫—Å—Ç–∞
# word_count = text.count(' ') + 1  # –ü–æ–¥—Å—á–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–ª–æ–≤
# print(word_count)  # –í—ã–≤–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–ª–æ–≤

#---------------------------------------
# print(input().count(' ') + 1)

"""
–ú–∏–Ω—É—Ç–∫–∞ –≥–µ–Ω–µ—Ç–∏–∫–∏ üß¨
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—ë—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–¥–∞, 
—Å–æ—Å—Ç–æ—è—â–∞—è –∏–∑ –±—É–∫–≤ –ê (–∞–¥–µ–Ω–∏–Ω), –ì (–≥—É–∞–Ω–∏–Ω), –¶ (—Ü–∏—Ç–æ–∑–∏–Ω) –∏ –¢ (—Ç–∏–º–∏–Ω). 
–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Å–∫–æ–ª—å–∫–æ 
–∞–¥–µ–Ω–∏–Ω–∞, –≥—É–∞–Ω–∏–Ω–∞, —Ü–∏—Ç–æ–∑–∏–Ω–∞ –∏ —Ç–∏–º–∏–Ω–∞ –≤—Ö–æ–¥–∏—Ç –≤ –¥–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–¥–∞.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—ë—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–¥–∞, —Å–æ—Å—Ç–æ—è—â–∞—è –∏–∑ —Å–∏–º–≤–æ–ª–æ–≤ 
–ê, –ì, –¶, –¢, –∞, –≥, —Ü, —Ç.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏, —Å–∫–æ–ª—å–∫–æ –≥—É–∞–Ω–∏–Ω–∞, —Ç–∏–º–∏–Ω–∞, —Ü–∏—Ç–æ–∑–∏–Ω–∞, 
–∞–¥–µ–Ω–∏–Ω–∞ –≤—Ö–æ–¥–∏—Ç –≤ –¥–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–¥–∞.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –°—Ç—Ä–æ–∫–∞ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥—Ä—É–≥–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤, –∫—Ä–æ–º–µ –ê, –ì, –¶, –¢, –∞, –≥, —Ü, —Ç.

Sample Input 1:
–ê–∞–∞–ì–ì–¶–¶—Ü–¢–¢—Ç—Ç—Ç

Sample Output 1:
–ê–¥–µ–Ω–∏–Ω: 3
–ì—É–∞–Ω–∏–Ω: 2
–¶–∏—Ç–æ–∑–∏–Ω: 3
–¢–∏–º–∏–Ω: 5
"""
# _str = input().lower()
#
# print("–ê–¥–µ–Ω–∏–Ω:", _str.count("–∞"))
# print("–ì—É–∞–Ω–∏–Ω:", _str.count("–≥"))
# print("–¶–∏—Ç–æ–∑–∏–Ω:", _str.count("—Ü"))
# print("–¢–∏–º–∏–Ω:", _str.count("—Ç"))

"""
–û—á–µ–Ω—å —Å—Ç—Ä–∞–Ω–Ω—ã–µ –¥–µ–ª–∞ üìª
–î–∂–∏–º –•–æ–ø–ø–µ—Ä —Å –ø–æ–º–æ—â—å—é —Ä–∞–¥–∏–æ–ø—Ä–∏—ë–º–Ω–∏–∫–∞ –ø—ã—Ç–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –û–¥–∏. 
–ù–∞ –ø—Ä–∏—ë–º–Ω–∏–∫ –µ–º—É –ø–æ—Å—Ç—É–ø–∞–µ—Ç n —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π –∫–æ–¥–∞ –ú–æ—Ä–∑–µ. 
–î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–≤ –∏—Ö, –æ–Ω –ø–æ–ª—É—á–∞–µ—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏–∑ —Ü–∏—Ñ—Ä –∏ –±—É–∫–≤ —Å—Ç—Ä–æ—á–Ω–æ–≥–æ 
–ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞. –ü—Ä–∏ —ç—Ç–æ–º —Ç–æ–ª—å–∫–æ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –û–¥–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è —á–∏—Å–ª–æ 
11, –ø—Ä–∏—á—ë–º –º–∏–Ω–∏–º—É–º 3 —Ä–∞–∑–∞. –ü–æ–º–æ–≥–∏—Ç–µ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –î–∂–∏–º—É –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –û–¥–∏.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–í –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ –ø–æ–¥–∞—ë—Ç—Å—è —á–∏—Å–ª–æ n ‚Äì –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π, –≤ –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö 
n —Å—Ç—Ä–æ–∫–∞—Ö –≤–≤–æ–¥—è—Ç—Å—è —Å–∞–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –û–¥–∏.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –û–¥–∏ –≤—Ö–æ–∂–¥–µ–Ω–∏—è —á–∏—Å–ª–∞ 
11 –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–µ–ø–µ—Ä–µ—Å–µ–∫–∞—é—â–∏–º–∏—Å—è. –î—Ä—É–≥–∏–º–∏ —Å–ª–æ–≤–∞–º–∏, –µ—Å–ª–∏ –º—ã –Ω–∞—à–ª–∏ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ —á–∏—Å–ª–∞ 
11, —Ç–æ —Å–ª–µ–¥—É—é—â–µ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å—Ç—Ä–æ–≥–æ –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ. 
–ù–∞–ø—Ä–∏–º–µ—Ä, –≤ —Å—Ç—Ä–æ–∫–µ '111' —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –æ–¥–Ω–∞ —Ç–∞–∫–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å, 
–≤ —Ç–æ –≤—Ä–µ–º—è –∫–∞–∫ –≤ '1111' –∏—Ö —É–∂–µ –¥–≤–µ.
"""
# n = int(input())
# count = 0
# for i in range(n):
#     x = input()
#     if x.count("11") >= 3:
#         count += 1
# print(count)

#------------------------------------
# print(sum(input().count('11') > 2 for _ in range(int(input()))))


"""
–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ü–∏—Ñ—Ä
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—ë—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞. 
–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ü–∏—Ñ—Ä –≤ –¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–µ.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—ë—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ü–∏—Ñ—Ä –≤ –¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–µ.
"""

# _str = input()
# count = 0
# for i in _str:
#     if i.isdigit():
#         count += 1
# print(count)

#----------------------------------
# n = input()
# print(sum(n.count(i) for i in '1234567890'))

"""
.com or .ru üåê
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—ë—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞. 
–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ —Å—Ç—Ä–æ–∫–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –ø–æ–¥—Å—Ç—Ä–æ–∫–æ–π .com –∏–ª–∏ .ru.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—ë—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ ¬´YES¬ª (–±–µ–∑ –∫–∞–≤—ã—á–µ–∫), 
–µ—Å–ª–∏ –≤–≤–µ–¥—ë–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –ø–æ–¥—Å—Ç—Ä–æ–∫–æ–π .com –∏–ª–∏ .ru, 
–∏–ª–∏ ¬´NO¬ª (–±–µ–∑ –∫–∞–≤—ã—á–µ–∫) –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ.
"""

# n = input()
# if n[-4:] == ".com" or n[-3:] == ".ru":
#     print("YES")
# else:
#     print("NO")
#--------------------------------------------
# s = input()
# print('YES' if s.endswith(('.com','.ru')) else 'NO')

"""
–°–∞–º—ã–π —á–∞—Å—Ç–æ—Ç–Ω—ã–π —Å–∏–º–≤–æ–ª
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—ë—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞. 
–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç –Ω–∞ —ç–∫—Ä–∞–Ω —Å–∏–º–≤–æ–ª, –∫–æ—Ç–æ—Ä—ã–π –ø–æ—è–≤–ª—è–µ—Ç—Å—è –Ω–∞–∏–±–æ–ª–µ–µ —á–∞—Å—Ç–æ.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—ë—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞. 
–¢–µ–∫—Å—Ç –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å—Ç—Ä–æ—á–Ω—ã–µ –∏ –∑–∞–≥–ª–∞–≤–Ω—ã–µ –±—É–∫–≤—ã –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –∏ —Ä—É—Å—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞, 
–∞ —Ç–∞–∫–∂–µ —Ü–∏—Ñ—Ä—ã.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —Å–∏–º–≤–æ–ª, –∫–æ—Ç–æ—Ä—ã–π –ø–æ—è–≤–ª—è–µ—Ç—Å—è –Ω–∞–∏–±–æ–ª–µ–µ —á–∞—Å—Ç–æ.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ï—Å–ª–∏ —Ç–∞–∫–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ, —Å–ª–µ–¥—É–µ—Ç –≤—ã–≤–µ—Å—Ç–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ –ø–æ—Ä—è–¥–∫—É —Å–∏–º–≤–æ–ª.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –°–ª–µ–¥—É–µ—Ç —Ä–∞–∑–ª–∏—á–∞—Ç—å –∑–∞–≥–ª–∞–≤–Ω—ã–µ –∏ —Å—Ç—Ä–æ—á–Ω—ã–µ –±—É–∫–≤—ã, 
–∞ —Ç–∞–∫–∂–µ –±—É–∫–≤—ã —Ä—É—Å—Å–∫–æ–≥–æ –∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞.
"""

# _str = input()
# count = 0
# x = ""
#
# for i in range(len(_str)):
#     _str1 = _str.count(_str[i])
#     if _str1 >= count:
#         count = _str1
#         x = _str[i]
# print(x)

#------------------------------------
# s = input()
#
# most_common = s[0]
# for el in s:
#     if s.count(el) >= s.count(most_common):
#         most_common = el
#
# print(most_common)


"""
–ü–µ—Ä–≤–æ–µ –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—ë—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞. 
–ï—Å–ª–∏ –≤ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–µ –±—É–∫–≤–∞ ¬´f¬ª –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑, 
–≤—ã–≤–µ–¥–∏—Ç–µ –µ—ë –∏–Ω–¥–µ–∫—Å. –ï—Å–ª–∏ –æ–Ω–∞ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –¥–≤–∞ –∏ –±–æ–ª–µ–µ —Ä–∞–∑–∞, 
–≤—ã–≤–µ–¥–∏—Ç–µ –∏–Ω–¥–µ–∫—Å—ã –µ—ë –ø–µ—Ä–≤–æ–≥–æ –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ, 
—Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª–æ–º –ø—Ä–æ–±–µ–ª–∞. –ï—Å–ª–∏ –±—É–∫–≤–∞ ¬´f¬ª –≤ –¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–µ –Ω–µ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è, 
—Å–ª–µ–¥—É–µ—Ç –≤—ã–≤–µ—Å—Ç–∏ ¬´NO¬ª (–±–µ–∑ –∫–∞–≤—ã—á–µ–∫)
"""

# text = input()
# f_indices = [i for i, char in enumerate(text) if char == 'f']
#
# if not f_indices:
#   print("NO")
# elif len(f_indices) == 1:
#   print(f_indices[0])
# else:
#   print(f_indices[0], f_indices[-1])

#-----------------------------------------------
# s = input()
# cnt = s.count("f")
#
# if cnt == 0:
#     print("NO")
# elif cnt == 1:
#     print(s.index("f"))
# else:
#     print(s.index("f"), s.rindex("f"))

"""
–£–¥–∞–ª–µ–Ω–∏–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—ë—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞, 
–≤ –∫–æ—Ç–æ—Ä–æ–π –±—É–∫–≤–∞ ¬´h¬ª –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º –¥–≤–∞ —Ä–∞–∑–∞. 
–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —É–¥–∞–ª—è–µ—Ç –∏–∑ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏ –ø–µ—Ä–≤–æ–µ 
–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ –±—É–∫–≤—ã ¬´h¬ª, –∞ —Ç–∞–∫–∂–µ –≤—Å–µ —Å–∏–º–≤–æ–ª—ã, –Ω–∞—Ö–æ–¥—è—â–∏–µ—Å—è –º–µ–∂–¥—É –Ω–∏–º–∏
"""
# text = input()
# first_h = text.find('h')
# last_h = text.rfind('h')
#
# if first_h == -1 or last_h == -1 or first_h == last_h:
#   print(text) # –ë—É–∫–≤–∞ 'h' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–≤–∞–∂–¥—ã –∏–ª–∏ –≤–æ–æ–±—â–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.
# else:
#   result = text[:first_h] + text[last_h+1:]
#   print(result)

#-------------------------------------------------
# s = input()
#
# first = s.find("h")
# last = s.rfind("h")
# res = s[:first] + s[last+1:]
#
# print(res)

"""
–ü–ª–æ—Ö–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ üòà
–ù–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ Stepik –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –æ—Å—Ç–∞–≤–ª—è—é—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏, 
–Ω–æ –Ω–µ –≤—Å–µ –∏–∑ –Ω–∏—Ö —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –ø—Ä–∞–≤–∏–ª–∞–º. –¢–∞–∫, –Ω–∞–ø—Ä–∏–º–µ—Ä, 
–º–æ–¥–µ—Ä–∞—Ç–æ—Ä –°—ç–º —Å—á–∏—Ç–∞–µ—Ç –Ω–µ—É–º–µ—Å—Ç–Ω—ã–º–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏ —Ç–µ, 
–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç —Å–æ–±–æ–π –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –∏–ª–∏ —Å–æ—Å—Ç–æ—è—Ç —Ç–æ–ª—å–∫–æ –∏–∑ –ø—Ä–æ–±–µ–ª–æ–≤. 
–ü–æ–¥–æ–±–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –æ–Ω —É–¥–∞–ª—è–µ—Ç ‚Äì –Ω–µ—á–µ–≥–æ –∑–∞—Å–æ—Ä—è—Ç—å –∫—É—Ä—Å –±–µ—Å–ø–æ–ª–µ–∑–Ω—ã–º –º–∞—Ç–µ—Ä–∏–∞–ª–æ–º!

–Ω–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ n, –∞ –∑–∞—Ç–µ–º n —Å—Ç—Ä–æ–∫, 
–ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏—Ö —Ç–µ–∫—Å—Ç. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–æ–¥–∏—Ç—å —Ç–µ–∫—Å—Ç,
–µ—Å–ª–∏ —Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –ø—Ä–æ–±–µ–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –≤—ã–≤–æ–¥–∏—Ç
¬´COMMENT SHOULD BE DELETED¬ª.
"""

# for i in range(1, int(input()) + 1):
#     text = input()
#     if text == "" or text.isspace():
#         print(f"{i}: COMMENT SHOULD BE DELETED")
#     else:
#         print(f"{i}: {text}")

"""
–ê–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä üöòüå∂Ô∏è
–í —Å–ª—É–∂–±–µ –ø–æ –¥–æ—Ä–æ–∂–Ω–æ–º—É –¥–≤–∏–∂–µ–Ω–∏—é —Ä–µ—à–∏–ª–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è 
–∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤: –≤–º–µ—Å—Ç–æ —á–µ–ª–æ–≤–µ–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤ 
–ø–æ—Ä—É—á–∏–ª–∏ –Ω–µ–∫–æ—Ç–æ—Ä–æ–π GPT (–º–æ–¥–µ–ª–∏ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è). 
–ö–∞–∫ –º—ã –∑–Ω–∞–µ–º, –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –µ—â—ë —Å—ã—Ä–æ–≤–∞—Ç –∏ –¥–µ–ª–∞–µ—Ç –º–Ω–æ–≥–æ –æ—à–∏–±–æ–∫, 
–ø–æ—ç—Ç–æ–º—É –µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–ª–µ–¥—É–µ—Ç —Ç—â–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å. 
–ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä (–≤ –†–æ—Å—Å–∏–∏) –∏–º–µ–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π —Ñ–æ—Ä–º–∞—Ç:
–°065–ú–ö78 –∏–ª–∏ –°065–ú–ö163
"""
# _str = input()
# flag = "NO"
# k = "–ê–í–ï–ö–ú–ù–û–†–°–¢–£–•"
#
# if 9<= len(_str) <= 10:
#     letter = _str[0] + _str[4:6]
#     isdigit = _str[1:4] + _str[7:]
#     znak = _str[6]
#
#     if isdigit.isdigit() and znak == "_":
#       flag = "YES"
#
#     for i in letter:
#       if i not in k:
#         flag = "NO"
#         break
#
# print(flag)


#-------------------
# number = input()
# template = ''
# reg_1 = '<–ë–£–ö–í–ê><–¶–ò–§–†–ê><–¶–ò–§–†–ê><–¶–ò–§–†–ê><–ë–£–ö–í–ê><–ë–£–ö–í–ê>_<–¶–ò–§–†–ê><–¶–ò–§–†–ê>'
# reg_2 = '<–ë–£–ö–í–ê><–¶–ò–§–†–ê><–¶–ò–§–†–ê><–¶–ò–§–†–ê><–ë–£–ö–í–ê><–ë–£–ö–í–ê>_<–¶–ò–§–†–ê><–¶–ò–§–†–ê><–¶–ò–§–†–ê>'
# for i in number:
#     if i in '–ê–í–ï–ö–ú–ù–û–†–°–¢–£–•':
#         template += '<–ë–£–ö–í–ê>'
#     elif i.isdigit():
#         template += '<–¶–ò–§–†–ê>'
#     elif i == '_':
#         template += '_'
#     else:
#         template = ' '
#
# if template == reg_1 or template == reg_2:
#     print('YES')
# else:
#     print('NO')

"""
–ü—Ä–æ–≤–µ—Ä—å –Ω–∏–∫–Ω–µ–π–º üë©üå∂Ô∏è
–í–æ –≤—Ä–µ–º—è —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è –≤–∞–º –ø—Ä–µ–¥–ª–æ–∂–∏–ª–∏ —Ä–µ—à–∏—Ç—å –∑–∞–¥–∞—á—É –Ω–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—é –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. 
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—ã—Ç–∞–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç—å –Ω–∏–∫–Ω–µ–π–º –¥–ª—è —Å–≤–æ–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ —Å–æ—Ü—Å–µ—Ç–∏ Y. 
–ü—Ä–∞–≤–∏–ª–∞ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –Ω–∏–∫–Ω–µ–π–º–∞ –≤ —Å–æ—Ü—Å–µ—Ç–∏ Y —Å–ª–µ–¥—É—é—â–∏–µ:

–Ω–∏–∫–Ω–µ–π–º –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å —Å–∏–º–≤–æ–ª–∞ @
–Ω–∏–∫–Ω–µ–π–º –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ç 5 –¥–æ 15 (–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ) —Å–∏–º–≤–æ–ª–æ–≤ (–≤–∫–ª—é—á–∞—è –ø–µ—Ä–≤—ã–π —Å–∏–º–≤–æ–ª @)
–Ω–∏–∫–Ω–µ–π–º –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ—á–Ω—ã–µ –±—É–∫–≤—ã –∏ (–∏–ª–∏) —Ü–∏—Ñ—Ä—ã (–ø–æ–º–∏–º–æ –ø–µ—Ä–≤–æ–≥–æ —Å–∏–º–≤–æ–ª–∞ @)
–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç ¬´Correct¬ª (–±–µ–∑ –∫–∞–≤—ã—á–µ–∫), 
–µ—Å–ª–∏ –Ω–∏–∫–Ω–µ–π–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤—Å–µ–º –≤—ã—à–µ–ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–º –ø—Ä–∞–≤–∏–ª–∞–º, 
–∏–ª–∏ ¬´Incorrect¬ª (–±–µ–∑ –∫–∞–≤—ã—á–µ–∫) –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—ë—Ç—Å—è –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞ ‚Äì –Ω–∏–∫–Ω–µ–π–º.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —É—Å–ª–æ–≤–∏–µ–º –∑–∞–¥–∞—á–∏.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –Ω–∏–∫–Ω–µ–π–º—É –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å 
—Å—Ç—Ä–æ—á–Ω—ã–µ –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ, –Ω–∏–∫–Ω–µ–π–º –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ 
—Å—Ç—Ä–æ—á–Ω—ã–µ –±—É–∫–≤—ã –∏–ª–∏ —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã (–ø–æ–º–∏–º–æ –ø–µ—Ä–≤–æ–≥–æ —Å–∏–º–≤–æ–ª–∞ @). 
–ù–∞–ø—Ä–∏–º–µ—Ä, —Å–ª–µ–¥—É—é—â–∏–µ –Ω–∏–∫–Ω–µ–π–º—ã —Å—á–∏—Ç–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏:
"""

# nik = input()
# count = 0
#
# if 5 <= len(nik) <= 15:
#     if nik == nik.lower():
#         count += 1
#     if nik[0] == "@":
#         count +=1
#     if nik[1:].isalnum():
#         count += 1
# print("Correct" if count == 3 else "Incorrect")

#-----------------------------------------------
# s = input()
#
# if (
#     s.startswith('@')
#     and 5 <= len(s) <= 15
#     and s[1:].isalnum()
#     and s == s.lower()
# ):
#     print('Correct')
# else:
#     print('Incorrect')



