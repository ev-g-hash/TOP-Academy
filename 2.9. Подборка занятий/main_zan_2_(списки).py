"""
------------------------------------------------------------------------------------
                                            списки
------------------------------------------------------------------------------------
"""
# fruits = ["aplle", "banana", "cherry"]
# print(fruits)

"""
-----------------------------------------------------------------------------------------
другой способ создания списков
-----------------------------------------------------------------------------------------
"""
# my_list = list(["aplle", "banana", "cherry"])
# print(my_list)

"""
----------------------------------------------------------------------------------------
длина списка (len)
----------------------------------------------------------------------------------------
"""
# print(len(fruits))

"""
-------------------------------------------------------------------------------------------
различные списки пайтон позволяет всевозможные варианты
-------------------------------------------------------------------------------------------
"""
# my_list1 = ["banana", 1, 1.5, True, False, [1, 2, 3]]
# print(my_list1)

"""
---------------------------------------------------------------------------------------
сравнение списков
---------------------------------------------------------------------------------------
"""
# my_list_s1 = [1, 2, 3]
# my_list_s2 = [1, 3, 2]
# my_list_s3 = [1, 2, 3]
#
# print(my_list_s1 == my_list_s2)
# print(my_list_s1 == my_list_s3)

"""
---------------------------------------------------------------------------------------
нахождение элемента в списке
---------------------------------------------------------------------------------------
"""
# fruits1 = ["aplle", "banana", "cherry"]
#
# print("banana" in fruits1)
# print("dodo" in fruits1)

"""
---------------------------------------------------------------------------------------
создание списка с помощью переменных
--------------------------------------------------------------------------------------
"""
# element1 = "aplle"
# element2 = "banana"
# element3 = "cherry"
# fruits_el = [element1, element2, element3]
# print(fruits_el)

"""
-------------------------------------------------------------------------------------
разбиение слова и создание из него списка отдельных элементов
-------------------------------------------------------------------------------------
"""
# x = "4512"
# my_list = list(x)
# print(my_list)

"""
------------------------------------------------------------------------------------
сложение списков
------------------------------------------------------------------------------------
"""
# my_list_s1 = [1, 2, 3]
# my_list_s2 = [4, 5, 6]
# my_list_s3 = my_list_s1 + my_list_s2
# print(my_list_s3)

"""
--------------------------------------------------------------------------------------
добавление элемента в список
-------------------------------------------------------------------------------------
"""
# fruits_d = ["aplle", "banana", "cherry"]
# fruits_d.append("gold")
# print(fruits_d)

"""
-------------------------------------------------------------------------------------
удаление последнего элемента из списка
------------------------------------------------------------------------------------
"""
# fruits_y = ["aplle", "banana", "cherry"]
# fruits_y_y = fruits_y.pop()
# print(fruits_y)

"""
------------------------------------------------------------------------------------
добавление списка к списку
------------------------------------------------------------------------------------
"""

# fruits_d = ["aplle", "banana", "cherry"]
# fruits_d2 = ["aplle2", "banana2", "cherry2"]
# fruits_d.extend(fruits_d2)
# print(fruits_d)

"""
---------------------------------------------------------------------------------------
разворот списка
---------------------------------------------------------------------------------------
"""
# fruits_r = ["aplle", "banana", "cherry"]
# fruits_r.reverse()
# print(fruits_r)

"""
---------------------------------------------------------------------------------------
сортировка по возрастанию
---------------------------------------------------------------------------------------
"""
# fruits_s_str = ["aplle", "banana", "cherry"]
# fruits_s_int = [100, 10, 5]
# fruits_s_str.sort()
# fruits_s_int.sort()
# print(fruits_s_str, fruits_s_int)

"""
----------------------------------------------------------------------------------------
сортировка по убыванию в sort добавяем (reverse=True)
----------------------------------------------------------------------------------------
"""
# fruits_s_int1 = [5, 10, 100]
# fruits_s_int1.sort(reverse=True)
# print(fruits_s_int1)

"""
----------------------------------------------------------------------------------------
разделить список split (убираем разделитель в сплите и возвращает всё через разделитель)
----------------------------------------------------------------------------------------
"""
# my_string_r = "а роза упала на лапу азора"
# my_string_r = my_string_r.split(" ")
# print(my_string_r)
# #собрать заново
# my_string_s = "!".join(my_string_r)
# print(my_string_s)

"""
-------------------------------------------------------------------------------------
максимальный минимальный элемент в списке
--------------------------------------------------------------------------------------
"""
# my_list_el = [1, 2, 3, 4, 5, 6]
# print(max(my_list_el))
# print(min(my_list_el))

"""
------------------------------------------------------------------------------------           
            разбивка, разворот, склеивание
------------------------------------------------------------------------------------           
"""
# x = "4512"
# my_x = list(x)
# print(my_x)
# my_x.reverse()
# my_x_s = "".join(my_x)
# print(my_x_s)

# numbers = [1, 2, 3, 4, 5]
# string_numbers = "".join(map(str, numbers))
# print(string_numbers)

# #-------------------------------------------------преобразование числа в список
# n = int(input())
# x = str(n)
# print(list(map(int, x)))


"""
-----------------------------------------------------------------------------------                       
                            дополнения
-----------------------------------------------------------------------------------
"""
# m = [1, 2, 5, 2, "a", [1, 2]]
# print(m[-1] [0])
#
# m1 = [[1, 2, 6], 5, 2, "a", [1, 2]]
# print(len(m1[0]))
#
# m2 = [[1, 2, 6], [5, 2], "a", [1, 2]]
# m2[0], m2[1] = m2[1], m2[0]
# print(m2)
#
# m3 = [[1, 2], [5, 2], "a"]
# m3 = m3 * 2
# print(m3)

"""
---------------------------------------------------------------------------------------
map(хорошо работает с отрицательными числами)
если задаём число списком в одну строку то чтобы сделать отдельно числа в списке
нужно обернуть в лист, выполнить функцию map) соответственно пример ниже 
----------------------------------------------------------------------------------------
"""
# x = input("""
# Введите список чисел, разделённых пробелом
# например (1 22 3 -44 5 666 0 8 9 100): \n """).split()
#
# num_x = list(map(int, x)) # map выполняет операцию int
#
# print(num_x)

"""
------------------------------------------------------------------------------------------
преобразование строки чисел в список или кортеж чисел
------------------------------------------------------------------------------------------
"""
# values = input('Введите числа через запятую: ')
#
# ints_as_strings = values.split(',')
#
# ints = map(int, ints_as_strings)
#
# lst = list(ints)
# tup = tuple(lst)
#
# print('Список:', lst)
# print('Кортеж:', tup)

"""
----------------------------------------------------------------------------------------------------
Создайте список из имен-строк. Затем добавьте в этот список два новых имени и удалите последнее имя.
Выведите финальный список в консоль.
---------------------------------------------------------------------------------------------------
"""
# name = ["Tom", "Bob", "Sam"]
# print(name)                 #список
# name.append("Alice")        #добавление элемента
# name.append("Kate")         #добавление элемента
# print(name)
# name.pop()                  #удаление последнего элемента
# print(name)

"""
------------------------------------------------------------------------------------------------------
Напишите программу, которая удаляет дубликаты из списка.
-----------------------------------------------------------------------------------------------------
"""
# from random import randint
#
# list1 = []
# for i in range(10):
#     list1.append(randint(0, 10))
#
# list2 = []
#
# for n in list1:
#     if n not in list2:
#         list2.append(n)
#
# print("Начальный список: ", list1)
# print("После удаления дублей: ", list2)

"""
---------------------------------------------------------------------------------------------------
 Задание 2
 Есть список целых,заполненный случайными числами. На основании данных этого массива нужно:
 ■ Создать список целых, содержащий только четные числа из первого списка;
 ■ Создать список целых,содержащий только нечетные числа из первого списка;
 ■ Создать список целых, содержащий только отрицательные числа из первого списка;
 ■ Создать список целых, содержащий только положительные числа из первого списка
 -------------------------------------------------------------------------------------------------
"""
# print()
# from random import randint
#
# numbers = []
#
# for i in range(10):
#     numbers.append(randint(-20, 20))
# print(f"список случайных чисел {numbers}")
#
# #------------------Cписок целых, содержащий только четные числа из первого списка-----------------
# even_num = []
#
# for i in numbers:
#     if not i % 2:
#         even_num.append(i)
# print(f"список чётных чисел {even_num}")
#
# #------------------Список целых,содержащий только нечетные числа из первого списка-----------------
#
# odd_num = []
#
# for i in numbers:
#     if i % 2:
#         odd_num.append(i)
# print(f"список нечётных чисел {odd_num}")
#
# #------------------Список целых,содержащий только отрицательные числа из первого списка-----------------
#
# negative_num = []
#
# for i in numbers:
#     if i < 0:
#         negative_num.append(i)
# print(f"список отрицательных чисел {negative_num}")
#
# #------------------Список целых,содержащий только положительные числа из первого списка-----------------
#
# positive_num = []
#
# for i in numbers:
#     if i > 0:
#         positive_num.append(i)
# print(f"список положительных чисел {positive_num}")

"""
--------------------------------------------------------------------------------------------------
сортировка по возрастанию
--------------------------------------------------------------------------------------------------
"""
# fruits = ["ban", "aplle", "cherry", "date"]
# num = [5, 4, 3, 2, 1]
# sort_fruits = sorted(fruits)
# sort_num = sorted(num)
# print(sort_fruits)
# print(type(sort_fruits))
# print(sort_num)
# print(type(sort_num))

"""
--------------------------------------------------------------------------------------------------
сортировка по убыванию
--------------------------------------------------------------------------------------------------
"""
# fruits = ["ban", "aplle", "cherry", "date"]
# num = [0, 1, 2, 3, 4, 5]
# sort_fruits = sorted(fruits, reverse=True)
# sort_num = sorted(num, reverse=True)
# print(sort_fruits)
# print(type(sort_fruits))
# print(sort_num)
# print(type(sort_num))

"""
--------------------------------------------------------------------------------------------------
сортировка по длине (длина имеется ввиду каждого элемента)
--------------------------------------------------------------------------------------------------
"""
#
# fruits = ["ban", "aplle", "cherry", "date"]
# def sort_len(element: str) -> int:
#     return len(element)
# sort_fruits = sorted(fruits, key=sort_len)
# print(sort_fruits)

"""
--------------------------------------------------------------------------------------------------
сортировка списка по возрасту
--------------------------------------------------------------------------------------------------
"""
# people = [
#     {"name": "Alice", "age": 40},
#     {"name": "Bob", "age": 20},
#     {"name": "Evgen", "age": 30},
#     {"name": "Ava", "age": 35},
# ]
#
# def sot_by_age(person: dict) -> int:
#     return person["age"]
#
# sort_people = sorted(people, key=sot_by_age)
#
# print(sort_people)

"""
--------------------------------------------------------------------------------------------------
сортировка списка по имени если возраст совпадает
--------------------------------------------------------------------------------------------------
"""
# people = [
#     {"name": "Alice", "age": 40},
#     {"name": "Bob", "age": 20},
#     {"name": "Evgen", "age": 30},
#     {"name": "Ava", "age": 30},
# ]
#
# def sot_by_age_name(element: dict) -> tuple[int, str]:
#     return element["age"], element["name"]
#
# sort_people = sorted(people, key=sot_by_age_name)
#
# print(sort_people)

"""
--------------------------------------------------------------------------------------------------
фильтрация возвращает тру или фолс
--------------------------------------------------------------------------------------------------
"""
#
# def is_even(n: int) -> bool:
#     return n % 2 == 0
#
# numbers = [5, 4, 3, 2, 1]
#
# filter_numbers = list(filter(is_even, numbers))
#
# print(type(filter_numbers))
# print(filter_numbers)

"""
--------------------------------------------------------------------------------------------------
сортировка людей которым больше 18
--------------------------------------------------------------------------------------------------
"""
# people = [
#     {"name": "Alice", "age": 17},
#     {"name": "Bob", "age": 20},
#     {"name": "Evgen", "age": 16},
#     {"name": "Ava", "age": 30},
# ]
#
# def is_adult(person: dict) -> bool:
#     return person["age"] >= 18
#
# filter_people = list(filter(is_adult, people))
# print(filter_people)





