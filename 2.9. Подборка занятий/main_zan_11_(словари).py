"""
------------------------------------------------------------------------------------------------------------
                                        СЛОВАРЬ
------------------------------------------------------------------------------------------------------------
"""
"""
-----------------------------
ключами могут быть - строки, числа, (целые и дробные) и кортежи. 
Нельзя использовать списки, словари и другие изменяемые типы данных

в значения можно положить любые типы и даже новые словари.
-----------------------------

------------------------------
словари неупорядоченная структура данных.
это значит "ключ-значение" хранятся в произвольном порядке.
-----------------------------
"""

"""
------------------------------------------------создание словаря
"""
# books = {"1984":"Д.Оруэл",
#          "Убить пересмешника":"Харпер Ли"
#          }
# print(books)
#
# #-------------------------------------------------------------множество
# books = {"1984",
#          "Убить пересмешника"
#          }
#
# print(books)
#
# dict_books = {
#     "1984":"Д.Оруэл",
#     "Убить пересмешника":"Харпер Ли"
# }
# print(books)
#
# #----------------------------------------------------------вывод значения
# oruel = dict_books["1984"]
# print(oruel)
# print(dict_books["1984"])
#
# #----------------------------------------------------------добавление элемента в словарь
# dict_books["Мёртвые души"] = "Н.В.Гоголь"
# print(dict_books)

"""
--------------------------------------------добавление и удаление элемента из словаря
"""
# dict_books = {
#     "1984":"Д.Оруэл",
#     "Убить пересмешника":"Харпер Ли"
# }
# print(dict_books)
#
# dict_books["Мёртвые души"] = "Н.В.Гоголь"
# print(dict_books)
#
# del dict_books["1984"]
# print(dict_books)

"""
-------------------------------------изменение значения dict_books["1984"] = "Н.В.Гоголь"
"""
# dict_books = {
#     "1984":"Д.Оруэл",
#     "Убить пересмешника":"Харпер Ли"
#     }
#
# print(dict_books)
#
# dict_books["1984"] = "Н.В.Гоголь"
# print(dict_books)

"""
#----------------------------------------------добавление нескольких значений(update)
"""
# dict_books = {
#     "1984":"Д.Оруэл",
#     "Убить пересмешника":"Харпер Ли",
#     "Мёртвые души":"Н.В.Гоголь"
# }
# dict_books.update({
#     "Чемодан": "Сергей Довлатов",
#     "Преступление и наказание": "Фёдор Достоевский"
# })
# print(dict_books)

"""
-----------------------------------------------метод get - возвращает значение
"""
# dict_books = {
#     "1984":"Д.Оруэл",
#     "Убить пересмешника":"Харпер Ли",
#     "Мёртвые души":"Н.В.Гоголь",
#     "Чемодан": "Сергей Довлатов",
#     "Преступление и наказание": "Фёдор Достоевский"
# }
# hp = dict_books.get("Гарри Поттер и филосовский камень")
# pn = dict_books.get("Преступление и наказание")
# print(hp)
# print(pn)
#
# #метод get дополнение вместо None может вывести то что мы укажем например ("Такого ключа нет")
# qw = dict_books.get("Гарри Поттер и что-то там", "Такого ключа нет")
# print(qw)

"""
------------------------------------------------------ метод pop удаление по ключу
"""
# dict_books = {
#     "1984":"Д.Оруэл",
#     "Убить пересмешника":"Харпер Ли",
#     "Мёртвые души":"Н.В.Гоголь",
#     "Чемодан": "Сергей Довлатов",
#     "Преступление и наказание": "Фёдор Достоевский"
# }
# dict_books.pop("Чемодан")
# print(dict_books)
# dict_books.pop("Мёртвые души")
# print(dict_books)
# dict_books.pop("1984")
# print(dict_books)
# dict_books.pop("Убить пересмешника")
# print(dict_books)
# dict_books.pop("Преступление и наказание")
# print(dict_books)
# # ---------------------------------------------добавляю обратно
# dict_books["Чемодан"] = "Сергей Довлатов"
# print(dict_books)
# dict_books["Мёртвые души"] = "Н.В.Гоголь"
# print(dict_books)
# dict_books["1984"] = "Д.Оруэл"
# print(dict_books)
# dict_books["Убить пересмешника"] = "Харпер Ли"
# print(dict_books)
# dict_books["Преступление и наказание"] = "Фёдор Достоевский"
# print(dict_books)

"""
------------------------------------------------------ методы keys,values,items
"""
# #---------------------------------------------метод keys но без значений
# dict_books = {
#     "1984":"Д.Оруэл",
#     "Убить пересмешника":"Харпер Ли",
#     "Мёртвые души":"Н.В.Гоголь",
#     "Чемодан": "Сергей Довлатов",
#     "Преступление и наказание": "Фёдор Достоевский"
# }
# print(dict_books.keys())
# #---------------------------------------------метод values но без ключей
# dict_books = {
#     "1984":"Д.Оруэл",
#     "Убить пересмешника":"Харпер Ли",
#     "Мёртвые души":"Н.В.Гоголь",
#     "Чемодан": "Сергей Довлатов",
#     "Преступление и наказание": "Фёдор Достоевский"
# }
# print(dict_books.values())
#
#
# #---------------------------------------------метод items ключ и значение
# dict_books = {
#     "1984":"Д.Оруэл",
#     "Убить пересмешника":"Харпер Ли",
#     "Мёртвые души":"Н.В.Гоголь",
#     "Чемодан": "Сергей Довлатов",
#     "Преступление и наказание": "Фёдор Достоевский"
# }
# print(dict_books.items())

"""
------------------------------------------------------- через цикл
"""
# dict_books = {
#     "1984":"Д.Оруэл",
#     "Убить пересмешника":"Харпер Ли",
#     "Мёртвые души":"Н.В.Гоголь",
#     "Чемодан": "Сергей Довлатов",
#     "Преступление и наказание": "Фёдор Достоевский"
# }
#
# #---------------------------------------------цикл ключ - значение
# for i, j in dict_books.items():
#     print(i, j)
# #---------------------------------------------цикл ключ
# for i in dict_books.keys():
#     print(i)
# #---------------------------------------------цикл значение
# for j in dict_books.values():
#     print(j)

"""
------------------------------------------------------ вложеный словарь
"""
# students = {
#     "stydent1":{
#         "name":"Bodi",
#         "age":22,
#         "grades":[85,90,100]
#     },
#     "stydent2": {
#         "name": "Tom",
#         "age": 23,
#         "grades": [65, 50, 80]
#     },
# }
#
# #-------------------------------------------------------------обращение к вложенному
# print(students)
# print(students["stydent1"])
# print(students["stydent2"])
# print(students["stydent1"]["name"])
#
# #---------------------------------------------поиск во вложенном соваре через "if"
# if "stydent1" in students:
#     print("Ключ 'stydent1' да")
# else:
#     print("Ключ 'stydent1' нет")
#
# if "name" in students["stydent1"]:
#     print("Ключ 'name' да")
# else:
#     print("Ключ 'name' нет")

"""
# --------------------------------------------------- примеры работы со словарём
"""
# students = {
#     "stydent1":{
#         "name":"Bodi",
#         "age":22,
#         "grades":[85,90,100]
#     },
#     "stydent2": {
#         "name": "Tom",
#         "age": 23,
#         "grades": [65, 50, 80]
#     },
# }
#
# #---------------------------------------------------------------------создали копию
# # copy_students = students.copy()
# # print(copy_students)

# #-----------------------------------------------в переменную присвоили последний элемент и вывели его
# last_item = students.popitem()
# print(last_item)
#
# #---------------------------------------------------------------выводим через функцию
# def my_styd(**kwargs):
#     for i, j in kwargs.items():
#         print(f"{i}:{j}")
#
# my_styd(**students)

# #---------------------------------------------------создаем словарь из двух списков
#
# my_keys = ["name", "age", "job"]
# my_values = ["Alice", 31, "Engineer"]
#
# my_dict = dict(zip(my_keys, my_values))
# print(my_dict)

"""
----------------------------------------------------- задачки
"""
# #----------------------------------------------------------------Princess
#
# castle = [1, ["c"], 543, "P", ["n", ["r"]], "i", [[["s"]]]]
#
# a = castle[3]
# b = castle[4][1][0]
# c = castle[5]
# d = castle[4][0]
# e = castle[1][0]
# f = chr(101)
# g = castle[6][0][0][0]
#
# result_castle = a+b+c+d+e+f+g+g
#
# print(result_castle)

# #------------------------------------------------------------------------We recorder UFO
#
# message = [("We ",),"rec",{"r":"o"},{"o":"r"},{"m1":"ded "},{"m3":["a "], "m4":{"m5": "UFO"}}]
#
# z1 = message[0][0]
# z2 = message[1]
# z3 = message[2]["r"]
# z4 = message[3]["o"]
# z5 = message[4]["m1"]
# z6 = message[5]["m3"][0]
# z7 = message[5]["m4"]["m5"]
#
# result_message = z1+z2+z3+z4+z5+z6+z7
#
# print(result_message)


